@model LambAndLentil.Models.RecipeVM
@using LambAndLentil.Models;

@{

    ViewBag.Title = "Edit";
    SelectList ingredientShortDescriptions = (SelectList)ViewBag.ingredientShortDescriptions;

    SelectList ingreds = (SelectList)ViewBag.ingreds;
    
    int RecipeID = Model.RecipeID;


}

<h2>Edit a Recipe</h2>
@using (Html.BeginForm("Edit", "Recipes", new { RecipeID = RecipeID }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RecipeID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Servings, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Servings, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Servings, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MealType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.MealType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MealType, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="form-group">

        <div>
            <input type="submit" value="Save Changes" class="btn btn-default" />
        </div>
    </div>
}
<hr />
<h4>Ingredients in @Model.Name</h4>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(m => m.RecipeIngredients.First().Ingredient.ShortDescription)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.RecipeIngredients.First().Quantity)

        </th>
        <th>
            @Html.DisplayNameFor(m => m.RecipeIngredients.First().Ingredient.ServingSizeUnit)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.RecipeIngredients.First().Ingredient.Calories)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.RecipeIngredients.First().Ingredient.CalFromFat)
        </th>
        <th></th>
    </tr>
    @if (Model.RecipeIngredients != null || Model.RecipeIngredients.Count > 0)
    {
        foreach (var item in Model.RecipeIngredients)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Ingredient.ShortDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Measurement)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ingredient.Calories)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ingredient.CalFromFat)
                </td>
                <td>
                   
                    @using (Html.BeginForm("RemoveIngredient", "Recipes", new { RecipeID = RecipeID, recipeIngredientID = item.RecipeIngredientID }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Remove Ingredient" class="btn btn-default" />
                    }
                    @using (Html.BeginForm("ReplaceIngredient", "Recipes", new { RecipeID = RecipeID, oldRecipeIngredientID = item.RecipeIngredientID }))
                    {
                        //string ingredientsd = ingredientShortDescriptions.Items[0].Value.ToString //<<<<<<<<<
                        @Html.AntiForgeryToken()
                        <p>
                            Select a new ingredient: @Html.DropDownList("ingredientsd", ingredientShortDescriptions,"choose" )
                            Quantity:
                            @Html.EditorFor(m => m.RecipeIngredients.FirstOrDefault().Quantity)

                            @Html.EnumDropDownListFor(m => m.RecipeIngredients.FirstOrDefault().Measurement, htmlAttributes: new { @class = "form-control" })

                        </p> 

                    <input type="submit" value="Replace Ingredient" class="btn btn-default" />

                    }
                </td>
            </tr>
                        }
                    }
</table>
<div>

  

    @using (Html.BeginForm("AddIngredient", "Recipes", new { RecipeID = RecipeID }))
    {
        @Html.AntiForgeryToken()
        <p>
            @*Select an ingredient to add: @Html.DropDownList("IngredientName", ingredientShortDescriptions, "choose")
            Quantity:
            @Html.EditorFor(m => m.RecipeIngredients.FirstOrDefault().Quantity)

            @Html.EnumDropDownListFor(m => m.RecipeIngredients.FirstOrDefault().Measurement, htmlAttributes: new { @class = "form-control" })*@

        </p>

        <div class="form-group">
            <div>
                <input type="submit" value="Add Ingredient" class="btn btn-default" />
            </div>
        </div>



        <div class="row">
            <div class="col-md-6">
                @Html.ActionLink("Back to List", "Index")
            </div>
            <div class="col-md-6"></div>
         
            Total Calories  
            @Html.Label(Model.Calories.ToString())
        </div>


    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
