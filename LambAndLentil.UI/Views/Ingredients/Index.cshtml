 
@using LambAndLentil.UI.HtmlHelpers

 
@model LambAndLentil.UI.Models.ListVM
 @{
     ViewBag.Title = "Ingredients Table";
}

<h2>Ingredients</h2>

<p>
    @Html.ActionLink("Add Ingredient", LambAndLentil.UI.UIViewType.Create.ToString(), UIControllerType.Ingredients.ToString(), new { actionMethod=UIViewType.Create.ToString() },null) 
 
</p>
 
<div class="tableOfIngredients"> 
    <table>
        <tr> 
           
            <th class="categories">
                @Html.DisplayNameFor(model => model.Ingredients.First().Name) <br/> 
                @Html.ActionLink("Up",UIViewType.Index.ToString(),UIControllerType.Ingredients.ToString(),new { @class = "btn btn-info  glyphicon glyphicon-circle-arrow-up" }) 
                    @Html.ActionLink("Dn", UIViewType.Index.ToString(), UIControllerType.Ingredients.ToString(), new { @class = "btn btn-info glyphicon glyphicon-circle-arrow-down" }) 
            </th>
            <th  class="categories">  
                @{ Html.RenderAction("MakerMenu",UIControllerType.Nav.ToString(), new { actionMethod = "Index" });}
            </th>
            <th  class="categories">
                @{ Html.RenderAction("BrandMenu", UIControllerType.Nav.ToString(), new { actionMethod = "Index" });}
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().FoodGroup)
            </th>
            <th class="categories">
                @{ Html.RenderAction("CategoryMenu", UIControllerType.Nav.ToString(), new { actionMethod = "Index" });}
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Description)
            </th>*@ 
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().ServingSize)
            </th> 
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().ServingsPerContainer)
            </th> 
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().ContainerSize)
            </th> 
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().ContainerSizeInGrams)
            </th> 
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Calories)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().CalFromFat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().SaturatedFat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().TransFat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().PolyUnSaturatedFat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().MonoUnSaturatedFat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Cholesterol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Sodium)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().TotalCarbohydrates)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Protein)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Potassium)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().DietaryFiber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Sugars)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().VitaminA)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().VitaminC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Calcium)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Iron)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().FolicAcid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Egg)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Nuts)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Milk)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Wheat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Soy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Corn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Onion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Garlic)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().SodiumNitrite)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().UPC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Caffeine)
            </th> 
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().StorageType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().IngredientsList)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().ModifiedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().AddedByUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().IsGMO)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().CountryOfOrigin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().Kosher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ingredients.First().DataSource)
            </th>
<th></th>
        </tr>

        @foreach (var m in  Model.Ingredients)
        {
            Html.RenderPartial(UIViewType._IngredientTable.ToString(), m);
        }
        </table>
</div>
<div class="pager">
    <h4>Lamb & Lentil</h4>
    @Html.PageLinks(Model.PagingInfo, x => Url.Action(UIViewType.Index.ToString(), new { page = x  }))
</div>



  