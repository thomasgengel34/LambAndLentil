@model LambAndLentil.UI.Models.IngredientVM
@using LambAndLentil.Domain.Entities
@{
    string requestActionMethod = Request.AppRelativeCurrentExecutionFilePath.Split('/').Last();
    string actionMethod = ViewBag.ActionMethod == null ? requestActionMethod : ViewBag.ActionMethod.ToString();
    ViewBag.Title = actionMethod + " Ingredient";
}
@if (actionMethod == "Delete")
{
    <h2>@actionMethod Ingredient  &nbsp;:&nbsp; @Model.Name</h2>
}
else
{
    <h3>Ingredient Details for @Model.Name</h3>
}

<hr />
<div class="item">
    <div class="row">
        <div class="col-md-4">
            <ul>
                <li>@Html.DisplayNameFor(model => model.ServingSize) &nbsp;:&nbsp;@Model.ServingSize.ToString() &nbsp; @Model.ServingSizeUnit.ToString() </li>
                <li>@Html.DisplayNameFor(model => model.ServingsPerContainer)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.ServingsPerContainer)</li>
                <li>@Html.DisplayNameFor(model => model.Calories)&nbsp;:&nbsp;@Model.Calories.ToString()  </li>
                <li>@Html.DisplayNameFor(model => model.CalFromFat)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.CalFromFat)</li>
                <li>@Html.DisplayNameFor(model => model.TotalFat)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.TotalFat)</li>
                <li>@Html.DisplayNameFor(model => model.SaturatedFat)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.SaturatedFat)</li>
                <li>@Html.DisplayNameFor(model => model.TransFat)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.TransFat) g</li>
                <li>@Html.DisplayNameFor(model => model.PolyUnSaturatedFat)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.PolyUnSaturatedFat) g</li>
                <li>@Html.DisplayNameFor(model => model.MonoUnSaturatedFat)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.MonoUnSaturatedFat) g</li>
                <li>@Html.DisplayNameFor(model => model.Cholesterol)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Cholesterol)</li>
                <li>@Html.DisplayNameFor(model => model.Sodium)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Sodium)</li>
                <li>@Html.DisplayNameFor(model => model.Potassium)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Potassium)</li>
                <li>
                    @Html.DisplayNameFor(model => model.TotalCarbohydrates)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => modelItem.TotalCarbohydrates) g
                </li>
                <li>@Html.DisplayNameFor(model => model.DietaryFiber)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.DietaryFiber) g</li>
                <li>@Html.DisplayNameFor(model => model.Sugars)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Sugars) g</li>
                <li>@Html.DisplayNameFor(model => model.Protein)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Protein)</li>
            </ul>
        </div>
        <div class="col-md-4">
            <ul>
                <li>@Html.DisplayNameFor(model => model.Calcium)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Calcium)</li>
                <li>@Html.DisplayNameFor(model => model.Iron)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Iron)</li>
                <li>@Html.DisplayNameFor(model => model.VitaminA)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.VitaminA)</li>
                <li>@Html.DisplayNameFor(model => model.VitaminC)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.VitaminC)</li>
                <li>@Html.DisplayNameFor(model => model.DietaryFiber)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.DietaryFiber)</li>
                <li>@Html.DisplayNameFor(model => model.Sugars)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Sugars)</li>
                <li>@Html.DisplayNameFor(model => model.VitaminA)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.VitaminA)</li>
                <li>@Html.DisplayNameFor(model => model.VitaminC)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.VitaminC)</li>
                <li>@Html.DisplayNameFor(model => model.FolicAcid)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.FolicAcid)</li>
                <li>@Html.DisplayNameFor(model => model.Egg)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Egg)</li>
                <li>@Html.DisplayNameFor(model => model.Nuts)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Nuts)</li>
                <li>@Html.DisplayNameFor(model => model.Milk)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Milk)</li>
                <li>@Html.DisplayNameFor(model => model.Wheat)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Wheat)</li>
                <li>@Html.DisplayNameFor(model => model.Soy)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Soy)</li>
                <li>@Html.DisplayNameFor(model => model.Corn)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Corn)</li>
                <li>@Html.DisplayNameFor(model => model.Onion)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Onion)</li>
                <li>@Html.DisplayNameFor(model => model.Garlic)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Garlic)</li>
                <li>@Html.DisplayNameFor(model => model.SodiumNitrite)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.SodiumNitrite)</li>
                <li>@Html.DisplayNameFor(model => model.Caffeine)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Caffeine)</li>
            </ul>

        </div>
        <div class="col-md-4">
            <ul>
                <li>
                    @Html.DisplayNameFor(model => model.ContainerSize):@Html.DisplayFor(modelItem => Model.ContainerSize) &nbsp; @Html.DisplayFor(modelItem => Model.ContainerSizeUnit)
                    (@Html.DisplayFor(modelItem => Model.ContainerSizeInGrams) g)
                </li>
                <li>@Html.DisplayNameFor(model => model.FoodGroup) &nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.FoodGroup)</li>
                <li>@Html.DisplayNameFor(model => model.Category) &nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Category)</li>
                <li>@Html.DisplayNameFor(model => model.Maker)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Maker)</li>
                <li>@Html.DisplayNameFor(model => model.Brand)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Brand)</li>
                <li> @Html.DisplayNameFor(model => model.Kosher)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.Kosher) </li>
                <li>@Html.DisplayNameFor(model => model.UPC)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.UPC)</li>
                <li>@Html.DisplayNameFor(model => model.StorageType)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.StorageType)</li>
                <li>@Html.DisplayNameFor(model => model.IsGMO)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.IsGMO)</li>
                <li>@Html.DisplayNameFor(model => model.CountryOfOrigin)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.CountryOfOrigin)</li>
                <li>@Html.DisplayNameFor(model => model.AddedByUser)&nbsp;:<br />@Html.DisplayFor(modelItem => Model.AddedByUser)</li>
                <li>@Html.DisplayNameFor(model => model.CreationDate)&nbsp;:<br />@Html.DisplayFor(modelItem => Model.CreationDate)</li>
                <li>@Html.DisplayNameFor(model => model.ModifiedByUser)&nbsp;:<br />;@Html.DisplayFor(modelItem => Model.ModifiedByUser)</li>
                <li>@Html.DisplayNameFor(model => model.ModifiedDate)&nbsp;:<br />@Html.DisplayFor(modelItem => Model.ModifiedDate)</>
                <li>@Html.DisplayNameFor(model => model.DataSource)&nbsp;:<br />@Html.DisplayFor(modelItem => Model.DataSource)</>
            </ul>
        </div>
    </div>
</div>
<div> @Html.DisplayNameFor(model => model.IngredientsList)&nbsp;:&nbsp;@Html.DisplayFor(modelItem => Model.IngredientsList)</div>

@if (actionMethod == "Delete")
{
    <h3>Are you sure you want to delete this ingredient: (@Model.Name) ?</h3>

    @Html.ActionLink("No - Back to List", UIViewType.Index.ToString(), null, new { @class = "btn btn-default" })
    using (Html.BeginForm(UIViewType.DeleteConfirmed.ToString(),UIControllerType.Ingredients.ToString(), new { id = Model.ID }, FormMethod.Post  ))
    {
        @Html.AntiForgeryToken() 
        <div class="form-group">
            <div>
                <input type="submit" value="Yes - Delete" class="btn btn-default" />
            </div>
        </div>
    }

}
else
{
    <p>
        @Html.ActionLink("Edit", UIViewType.Edit.ToString(), new { id = Model.ID }, new { @class = "btn btn-default" }) &nbsp;
        @Html.ActionLink("Back to List", UIViewType.Index.ToString(), null, new { T = typeof(Ingredient), @class = "btn btn-default" })&nbsp; 
        @Html.ActionLink("Delete", UIViewType.Delete.ToString(), null, new { id = Model.ID },new { @class = "btn btn-default" })&nbsp; 
}
    </p>         
 
}