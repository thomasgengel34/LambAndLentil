@model LambAndLentil.UI.Models.IngredientVM
@using LambAndLentil.Domain.Entities
@{ 
    string requestActionMethod = Request.AppRelativeCurrentExecutionFilePath.Split('/').Last();
    string actionMethod = ViewBag.ActionMethod == null ? requestActionMethod : ViewBag.ActionMethod.ToString();
    ViewBag.Title = " Ingredient Details";
 
   
} 
    <h2>Ingredient Details for @Model.Name</h2> 

<hr />
 
    <div class="item">
        <div class="row">
            <div class="col-md-4">
                <ul>
                    <li>@Html.DisplayFor(model => model.Name, new { valueM = Model.Name })</li>
                    <li>@Html.DisplayFor(model => model.Description, new { valueM = Model.Description })</li>
               
                </ul>
            </div> 
            <div class="col-md-4">
                <ul> 
                    <li>@Html.DisplayFor(model => model.CreationDate, new { valueM = Model.CreationDate, readOnly = true })
                        @Html.HiddenFor(model => model.CreationDate)</li>
                    
                    <li>@Html.DisplayFor(model => model.ModifiedDate, new { valueM = Model.ModifiedDate, readOnly = true })
                        @Html.HiddenFor(model => model.ModifiedDate)</li>
                    
                </ul>
            </div>

        </div>
    </div>
<h3>Ingredients:</h3>
    <div class="width100"> @Html.DisplayFor(model => model.IngredientsList, new { valueM = Model.IngredientsList })   </div>
 
    <div>
        @Html.ActionLink("Back to List", UIViewType.Index.ToString(), null, new { T = typeof(Ingredient), @class = "btn btn-default" }) 
    </div> 