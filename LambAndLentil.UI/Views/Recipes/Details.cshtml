@model LambAndLentil.UI.Models.RecipeVM
@using LambAndLentil.Domain.Entities
@{

    string requestActionMethod = Request.AppRelativeCurrentExecutionFilePath.Split('/').Last();
    string actionMethod = ViewBag.ActionMethod == null ? requestActionMethod : ViewBag.ActionMethod.ToString();
    ViewBag.Title = actionMethod + " Recipe";
    string colon = " : ";
    if (actionMethod == UIViewType.Edit.ToString())
    {
        actionMethod = UIViewType.PostEdit.ToString();
    }
    if (actionMethod == UIViewType.Create.ToString())
    {
        actionMethod = UIViewType.PostEdit.ToString();
    }

    string value = "empty";
    SelectList IngredientsList = ViewBag.listOfIngredients;
    if (IngredientsList == null)
    {
        IngredientsList = new SelectList(new List<string>());
    }
    else
    {
        value = IngredientsList.First().Value;
    }
}

@Html.Partial("getNdbno")

@if (actionMethod == UIViewType.Delete.ToString())
{
    <h2>@actionMethod Recipe  @colon @Model.Name   ?</h2>
}
else if (actionMethod == UIViewType.Details.ToString())
{
    <h2>Recipe Details for @Model.Name</h2>
}
else if (actionMethod == UIViewType.PostEdit.ToString())
{
    if (Model.ID == 0)
    {
        <h2> Create New Recipe</h2>
    }
    else
    {
        <h2>Edit Details for @Model.Name Recipe</h2>
    }
}
else
{
    string modelLabel = Model.Name == null ? " " : Model.Name == "Newly Created" ? " " : Model.Name;
    <h2>@actionMethod Recipe  @colon @modelLabel </h2>
}

<hr />
@using (Html.BeginForm(actionMethod, UIControllerType.Recipes.ToString(), FormMethod.Post, new { id = Model.ID, recipeVM = Model }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    <div class="item">
        <div class="row">
            <div class="col-md-4">
                <ul>
                    <li>@Html.EditorFor(model => model.Name, new { valueM = Model.Name })</li>
                    <li>@Html.EditorFor(model => model.Description, new { valueM = Model.Description })</li>
                    <li>@Html.EditorFor(model => model.Servings, new { valueM = Model.Servings }) </li>
                    <li>@Html.EditorFor(model => model.MealType, new { valueM = Model.MealType })</li>
                    <li>@Html.EditorFor(model => model.Calories, new { valueM = Model.Calories })  </li>
                    <li>@Html.EditorFor(model => model.CalsFromFat, new { valueM = Model.CalsFromFat }) g</li>
                </ul>
            </div>
            <div class="col-md-4">
                <ul>
                    <li>@Html.EditorFor(model => model.AddedByUser, new { valueM = Model.AddedByUser, readOnly = true }) </li>
                    <li>
                        @Html.EditorFor(model => model.CreationDate, new { valueM = Model.CreationDate, readOnly = true })
                        @Html.HiddenFor(model => model.CreationDate)
                    </li>

                    <li>
                        @Html.EditorFor(model => model.ModifiedDate, new { valueM = Model.ModifiedDate, readOnly = true })
                        @Html.HiddenFor(model => model.ModifiedDate)
                    </li>
                    <li>@Html.EditorFor(model => model.ModifiedByUser, new { valueM = Model.ModifiedByUser, readOnly = true }) </li>
                </ul>
            </div>
        </div>
    </div>


    if (actionMethod == UIViewType.PostEdit.ToString() || actionMethod == UIViewType.Create.ToString())
    {
        <div class="form-group">
            <div>
                <input type="submit" value="Save Changes" class="btn btn-default col-md-offset-2 col-md-10" />
            </div>
        </div>


    }

}

@if (actionMethod == UIViewType.Create.ToString())
{
    <div>
        @Html.ActionLink("Back to List", UIViewType.Index.ToString(), null, new { T = typeof(Recipe), @class = "btn btn-default" })
    </div>

}

@if (actionMethod == UIViewType.PostEdit.ToString())
{
    if (Model.Ingredients == null)
    {
        Model.Ingredients = new List<Ingredient>();
    }

    if (Model.ID != 0)
    {
        using (Html.BeginForm("AttachIngredient", "Recipes", new { recipeID = Model.ID }))
        {
            @Html.HiddenFor(x => x.ID);
            @Html.DropDownList("ingredientID", IngredientsList, "Choose an Ingredient");
            <button type="submit" class="btn btn-default btn-sm  glyphicon glyphicon-plus" title="Add">Add Ingredient</button>        }

        <dd>
            <table class="table">
                <tr>
                    <th>Name</th>
                    <th>Ingredients List</th>
                    <th></th>
                </tr>
                @foreach (var item in Model.Ingredients)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IngredientsList)
                        </td>
                        <td>
                         

                            @Html.ActionLink(" ", "RemoveIngredient", new { recipeID = Model.ID, ingredientID = item.ID }, new { @class = "btn btn-default btn-sm  glyphicon glyphicon-trash", @title = "Delete" })

                    </tr>
                }
            </table>
        </dd>   }
    <div>
        @Html.ActionLink("Back to List", UIViewType.Index.ToString(), null, new { T = typeof(Recipe), @class = "btn btn-default" })
        @if (Model.ID != 0)
        {
            @Html.ActionLink("Delete", UIViewType.Delete.ToString(), null, new { id = Model.ID }, new { @class = "btn btn-default" })
        }
    </div>
   
}


@if (actionMethod == UIViewType.Delete.ToString())
{
    <h3>Are you sure you want to delete this recipe: (@Model.Name) ?</h3>

    @Html.ActionLink("No - Back to List", UIViewType.Index.ToString(), null, new { @class = "btn btn-default" })
    using (Html.BeginForm(UIViewType.DeleteConfirmed.ToString(), UIControllerType.Recipes.ToString(), new { id = Model.ID }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            <div>
                <input type="submit" value="Yes - Delete" class="btn btn-default" />
            </div>
        </div>
    }
}
@if (actionMethod == UIViewType.Details.ToString())
{
    <div>
        @Html.ActionLink("Back to List", UIViewType.Index.ToString(), null, new { T = typeof(Recipe), @class = "btn btn-default" })
        @Html.ActionLink("Edit", UIViewType.Edit.ToString(), null, new { id = Model.ID, actionMethod = UIViewType.Edit.ToString() }, new { @class = "btn btn-default" })
        @Html.ActionLink("Delete", UIViewType.Delete.ToString(), null, new { id = Model.ID }, new { @class = "btn btn-default" })

       
    </div>

    <dt>
        @Html.DisplayNameFor(model => model.Ingredients)
    </dt>
     
    <dd>
        <table class="table">
            <tr>
                <th>Name</th>
                <th>Ingredients List</th>
                <th></th>
            </tr>
            @foreach (var item in Model.Ingredients)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IngredientsList)
                    </td>
                    <td> 
                </tr>
            }
        </table>
    </dd>
}



