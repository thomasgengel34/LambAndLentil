@model LambAndLentil.UI.Models.PersonVM
@using LambAndLentil.Domain.Entities
@{
    string requestActionMethod = Request.AppRelativeCurrentExecutionFilePath.Split('/').Last();
    string actionMethod = ViewBag.ActionMethod == null ? requestActionMethod : ViewBag.ActionMethod.ToString();
    ViewBag.Title = actionMethod + " Person";
    string colon = " : ";
    if (actionMethod == UIViewType.Edit.ToString() || actionMethod == UIViewType.Create.ToString())
    {
        actionMethod = UIViewType.PostEdit.ToString();
    }
    Model.Name = String.Concat(Model.FirstName, " ", Model.LastName);
}


@if (actionMethod == UIViewType.Delete.ToString())
{
    <h2>@actionMethod Person  @colon @Model.Name   ?</h2>
}
else if (actionMethod == UIViewType.Details.ToString())
{
    <h2>Person Details for @Model.Name</h2>
}
else if (actionMethod == UIViewType.PostEdit.ToString())
{
    if (Model.ID == 0)
    {
        <h2> Create New Person</h2>
    }
    else
    {
        <h2>Edit Details for @Model.Name</h2>
    }
}
else
{
    string modelLabel = Model.Name == null ? " " : Model.Name == "Newly Created" ? " " : Model.Name;
    <h2>@actionMethod Person   @colon @modelLabel </h2>
}

<hr />
@using (Html.BeginForm(actionMethod, UIControllerType.Persons.ToString(), FormMethod.Post, new { id = Model.ID, ingredientVM = Model }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Name) 
    <div class="item">
        <div class="row">
            <div class="col-md-6">
                <ul>
                    <li>@Html.EditorFor(model => model.FirstName, new { valueM = Model.FirstName })</li>
                    <li>@Html.EditorFor(model => model.LastName, new { valueM = Model.LastName })</li>
                    <li>@Html.EditorFor(model => model.Description, new { valueM = Model.Description })</li>
                    <li>@Html.EditorFor(model => model.Weight, new { valueM = Model.Weight })</li>
                    <li>@Html.EditorFor(model => model.MinCalories, new { valueM = Model.MinCalories })</li>
                    <li>@Html.EditorFor(model => model.MaxCalories, new { valueM = Model.MaxCalories })  </li>
                    <li>@Html.EditorFor(model => model.NoGarlic, new { valueM = Model.NoGarlic })</li>
                </ul>
            </div>

            <div class="col-md-6">
                <ul>
                    <li>@Html.EditorFor(model => model.AddedByUser, new { valueM = Model.AddedByUser, readOnly = true }) </li>
                    <li>@Html.EditorFor(model => model.CreationDate, new { valueM = Model.CreationDate, readOnly = true }) </li>
                    <li>@Html.EditorFor(model => model.ModifiedByUser, new { valueM = Model.ModifiedByUser, readOnly = true }) </li>
                    <li>@Html.EditorFor(model => model.ModifiedDate, new { valueM = Model.ModifiedDate, readOnly = true })</li>
                </ul>
            </div>
        </div> 
    </div>

    if (actionMethod == UIViewType.PostEdit.ToString())
    {
    <div class="form-group">
        <div>
            <input type="submit" value="Save Changes" class="btn btn-default col-md-offset-2 col-md-10" />
        </div>
    </div> 
    }
}


@if (actionMethod == UIViewType.Create.ToString())
{
    <div>
        @Html.ActionLink("Back to List", UIViewType.Index.ToString(), null, new { T = typeof(Person), @class = "btn btn-default" })
    </div>

}

@if (actionMethod == UIViewType.PostEdit.ToString())
{
    <div>
        @Html.ActionLink("Back to List", UIViewType.Index.ToString(), null, new { T = typeof(Person), @class = "btn btn-default" })
        @if (Model.ID != 0)
        {
            @Html.ActionLink("Delete", UIViewType.Delete.ToString(), null, new { id = Model.ID }, new { @class = "btn btn-default" })
        }
    </div>

}


@if (actionMethod == UIViewType.Delete.ToString())
{
    <h3>Are you sure you want to delete this person: (@Model.Name) ?</h3>

    @Html.ActionLink("No - Back to List", UIViewType.Index.ToString(), null, new { @class = "btn btn-default" })
    using (Html.BeginForm(UIViewType.DeleteConfirmed.ToString(), UIControllerType.Persons.ToString(), new { id = Model.ID }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            <div>
                <input type="submit" value="Yes - Delete" class="btn btn-default" />
            </div>
        </div>
    }
}
@if (actionMethod == UIViewType.Details.ToString())
{
    <div>
        @Html.ActionLink("Back to List", UIViewType.Index.ToString(), null, new { T = typeof(Person), @class = "btn btn-default" })
        @Html.ActionLink("Edit", UIViewType.Edit.ToString(), null, new { id = Model.ID, actionMethod = UIViewType.Edit.ToString() }, new { @class = "btn btn-default" })
        @Html.ActionLink("Delete", UIViewType.Delete.ToString(), null, new { id = Model.ID }, new { @class = "btn btn-default" })

    </div>

}
